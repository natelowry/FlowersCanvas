<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <style type="text/css">
        body
        {
            margin: 0px;
            padding: 0px;
        }
        #container
        {
        }
    </style>
    <title>Canvas</title>
    <script src="Scripts/kinetic-v4.0.3.min.js" type="text/javascript"></script>
    <script type="text/javascript" src="Scripts/jquery-1.8.2.min.js"></script>
    <script type="text/javascript">
        //Globals
        //Scale number of initial flowers based on screen size
        var NumberOfInitialFlowers = $(window).width() / 75;
        var ImageBase = "Images/f";
        var NumberOfImages = 12;
        var ImageExt = ".png";
        var PossibleTransitions = ['linear',
                                   'ease-in',
                                   'ease-out',
                                   'ease-in-out',
                                   'back-ease-in',
                                   'back-ease-out',
                                   'back-ease-in-out',
                                   'elastic-ease-in',
                                   'elastic-ease-out',
                                   'elastic-ease-in-out',
                                   'bounce-ease-in',
                                   'bounce-ease-out',
                                   'bounce-ease-in-out',
                                   'strong-ease-in',
                                   'strong-ease-out',
                                   'strong-ease-in-out'];

        $().ready(function () {
            //Init
            var stage = new Kinetic.Stage({
                container: 'container',
                width: $(window).width(),
                height: $(window).height()
            });

            var layer = new Kinetic.Layer();

            stage.add(layer);

            //The beefy add function
            function addFlower() {
                addFlowerAt(0, 0);
            };

            function addFlowerAt(x, y) {
                var flowerObj = new Image();

                flowerObj.onload = function () {
                    //Set some random attributes for this particular flower
                    var scaleFactor = Math.random() * 1 + 0.5;
                    var rotate = Math.random() * 7;
                    var flower = new Kinetic.Image({
                        x: stage.getWidth() / 2, //Put it in the center of the canvas to start
                        y: stage.getHeight() / 2,
                        image: flowerObj,
                        offset: { //Make it rotate around its center
                            x: this.width / 2,
                            y: this.height / 2
                        },
                        scale: {
                            x: scaleFactor,
                            y: scaleFactor
                        },
                        originalScale: scaleFactor,
                        originalRotation: rotate
                    });



                    flower.on('mouseover touchstart', function () {
                        this.transitionTo({
                            rotation: this.attrs.originalRotation + .25,
                            scale: {
                                x: this.attrs.originalScale * 1.2,
                                y: this.attrs.originalScale * 1.2
                            },
                            duration: 1,
                            easing: 'back-ease-out'
                        });
                    });
                    flower.on('mouseout touchend', function () {
                        this.transitionTo({
                            rotation: this.attrs.originalRotation,
                            scale: {
                                x: this.attrs.originalScale,
                                y: this.attrs.originalScale
                            },
                            duration: 1,
                            easing: 'back-ease-out'
                        });
                    });

                    layer.add(flower);

                    //setup initial position
                    flower.transitionTo({
                        rotation: flower.attrs.originalRotation,
                        scale: {
                            x: flower.attrs.originalScale,
                            y: flower.attrs.originalScale
                        }, //If they supplied x,y parameters use those, else random
                        x: x == 0 ? Math.random() * stage.getWidth() : x,
                        y: y == 0 ? Math.random() * stage.getHeight() : y,
                        duration: Math.random() * 3,
                        easing: getRandomTransition()
                    });

                };

                flowerObj.src = getRandomImage();
            }

            for (var i = 0; i < NumberOfInitialFlowers; i++) {
                addFlower();
            }

            //Helpers
            function getRandomTransition() {
                return PossibleTransitions[Math.round(Math.random() * PossibleTransitions.length)];
            }

            function getRandomImage() {
                return ImageBase + (Math.round(Math.random() * NumberOfImages)) + ImageExt;
            }


            ///Window Bindings
            $(window).on('resize', function () {
                stage.setWidth($(window).width());
                layer.setWidth($(window).width());
                stage.setHeight($(window).height());
                layer.setHeight($(window).height());
            });


            $(window).on('keyup', function (event) {
                if (event.which == 67) {//c
                    //TODO: clear the canvas
                }
            });

            $(window).on('mouseup', function (evt) {
                //place a flower here
                addFlowerAt(evt.clientX, evt.clientY);
            });
        });
    </script>
</head>
<body>
    <div id="container">
    </div>
</body>
</html>
